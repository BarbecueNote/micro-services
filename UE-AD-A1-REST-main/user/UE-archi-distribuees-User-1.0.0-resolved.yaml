---
openapi: 3.1.0
info:
  title: User API
  description: This is the API of the User service
  contact:
    email: rory.maillard@imt-atlantique.net
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /:
    get:
      tags:
      - developers
      summary: home page of the service
      operationId: home
      responses:
        "200":
          description: welcome message
          content:
            text/html:
              schema:
                type: string
                example: <h1>Test</h1>
  /users:
    get:
      tags:
      - developers
      summary: get the full JSON database
      operationId: get_users
      responses:
        "200":
          description: full JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'
  /users/{id}:
    get:
      tags:
        -developers
      summary: get the user by id
      operationId: get_user_byid
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: User
          content:
            application/json:
              schema:
                $ref: "#components/schemas/User"
        "400":
          description: bad input parameter
  /users/{id}/reservations:
    get:
      tags:
      - developers
      summary: get the reservation by user id
      operationId: get_reservations_byid
      parameters:
      - name: id
        in: path
        description: user id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Bookings User
          content:
            application/json:
              schema:
                $ref: './../booking/UE-archi-distribuees-Booking-1.0.0-resolved.yaml#/components/schemas/BookingsUser'
        "400":
          description: bad input parameter
  /users/{id}/reservations/movies:
    get:
      tags:
        - developers
      summary: get the movie details of the reservations by user id
      operationId: get_reservations_movies_byid
      parameters:
        - name: id
          in: path
          description: user id.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: User movies
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: './../movie/UE-archi-distribuees-Movie-1.0.0-resolved.yaml#/components/schemas/MovieItem'
        "400":
          description: bad input parameter
components:
  schemas:
    AllUsers:
      required:
      - schedule
      type: object
      properties:
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/User'
    User:
      required:
      - id
      - name
      - last_active
      type: object
      properties:
        id:
          type: string
          example: "john_smith"
        name:
          type: string
          example: "John Smith"
        last_active:
          type: int
          example: 1360031010
